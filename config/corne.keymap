/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define TAPPING_TERM 210
#define QUICK_TAP    150

&mt {
	tapping-term-ms = <TAPPING_TERM>;
	quick-tap-ms = <QUICK_TAP>;
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                     | ALT | LWR | SPC |   | ENT | RSE  | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RSHFT SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LALT &mo 1 &kp SPACE   &kp RET &mo 2 &kp LGUI
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB    |               |          |        |           | CAPS    |    |  ,      |  7        |  8      |  9       |  *  |    /   |
// | BTCLR   | PgUp          | Home     |  Up    |  End      | Del     |    |  .      |  4        |  5      |  6       |  +  |    -   |
// | SHFT    | PgDn          | Left     | Down   | Right     | MUTE    |    |  0      |  1        |  2      |  3       |  =  | CapsLk |
//                           | GUI      |        | SPC       |         |    |   ENT   |           | L_ALT   |
                        bindings = <
   &kp TAB    &trans         &trans     &trans    &trans     &kp CAPS       &kp COMMA  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MULTIPLY  &kp KP_DIVIDE
   &kp LSHFT  &kp PAGE_UP    &kp HOME   &kp UP    &kp END    &kp DEL        &kp DOT    &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS      &kp KP_MINUS
   &kp LCTRL  &kp PAGE_DOWN  &kp LEFT   &kp DOWN  &kp RIGHT  &kp C_MUTE     &kp KP_N0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_EQUAL     &trans
                          	            &kp LGUI  &trans     &kp SPACE      &kp RET    &trans     &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  #         |  !             |  @           |  {         |  }           |  |      |   | Play       | F7       | F8  | F9  | F10  |      |
// |  "         |  ?             |  '           |  (         |  )           |  \      |   | VolUp      | F4       | F5  | F6  | F11  | LSFT |
// |  ^         |  %             |  $           |  [         |  ]           |  &      |   | VolDn      | F1       | F2  | F3  | F12  | RCTL |
//                                              | GUI        |              | SPC     |   | ENT        |          | ALT |
                        bindings = <
   &kp RA(N3)   &kp EXCL          &kp RA(N2)    &kp RA(SQT)   &kp RA(BSLH)  &kp RA(N1)    &kp C_PP     &kp F7  &kp F8  &kp F9 &kp F10 &kp BSPC
   &kp AT       &kp LS(MINUS)  &kp MINUS  &kp ASTRK     &kp LPAR      &kp RA(GRAVE) &kp C_VOL_UP &kp F4  &kp F5  &kp F6 &kp F11 &kp RSHFT
   &kp LS(LBRC) &kp PRCNT         &kp DLLR      &kp RA(LBKT)  &kp RA(RBKT)  &kp CARET     &kp C_VOL_DN &kp F1  &kp F2  &kp F3 &kp F12 &kp RCTRL
                    	                        &kp LGUI      &trans        &kp SPACE     &kp RET      &trans  &kp RALT
                        >;
                };
        };
};