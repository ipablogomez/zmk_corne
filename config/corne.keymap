/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define TAPPING_TERM 210
#define QUICK_TAP    150

&mt {
	tapping-term-ms = <TAPPING_TERM>;
	quick-tap-ms = <QUICK_TAP>;
};


/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | ESC  |
//                     | ALT | LWR | SPC |   | ENT | RSE  | GUI |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &td0 &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RSHFT SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &mt RCTRL ESC
                  &kp LALT &mo 1 &kp SPACE   &kp RET &mo 2 &kp LGUI
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB         | PgUp          | Home        |  Up    |  End        | NUM Lock |    |  ,      |  7        |  8      |  9       |  *  |  BKSP  |
// | SHIFT        | PgDn          | Left        | Down   | Right       | Del      |    |  .      |  4        |  5      |  6       |  +  |    -   |
// | CTRL         | Misc layer    | Bluetoth  1 |   <    | >           | MUTE     |    |  0      |  1        |  2      |  3       |  =  |    /   |
//                           | GUI         |        | SPC         |         |     |   ENT   |           | L_ALT   |
                        bindings = <
   &kp TAB         &kp PAGE_UP    &kp HOME      &kp UP    &kp END      &kp KP_NLCK     &kp COMMA  &kp N7  &kp N8  &kp N9  &kp KP_MULTIPLY  &kp BSPC
   &mt LSHFT BSLH  &kp PAGE_DOWN  &kp LEFT      &kp DOWN  &kp RIGHT    &kp DEL         &kp DOT    &kp N4  &kp N5  &kp N6  &kp KP_PLUS      &mt RSHFT KP_MINUS
   &kp LCTRL       &mo 3          &bt BT_SEL 0  &kp NUBS  &kp LS(NUBS) &kp C_MUTE      &kp N0  &kp N1  &kp N2  &kp N3  &kp LS(N0)       &mt RCTRL KP_DIVIDE
                          	                    &kp LALT  &trans       &kp SPACE       &kp RET    &kp SPACE  &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  #         |  !             |  @           |  {         |  }           |  |      |   | Play       | F7       | F8  | F9  | F10  |      |
// |  "         |  ?             |  '           |  (         |  )           |  \      |   | VolUp      | F4       | F5  | F6  | F11  | LSFT |
// |  ^         |  %             |  $           |  [         |  ]           |  &      |   | VolDn      | F1       | F2  | F3  | F12  | RCTL |
//                                              | GUI        |              | SPC     |   | ENT        |          | ALT |
                        bindings = <
   &kp RA(N3)   &kp EXCL          &kp RA(N2)    &kp RA(SQT)   &kp RA(BSLH)  &kp RA(N1)    &kp C_PP     &kp F7  &kp F8  &kp F9 &kp F10 &kp BSPC
   &kp AT       &kp LS(MINUS)  &kp MINUS  &kp ASTRK     &kp LPAR      &kp RA(GRAVE) &kp C_VOL_UP &kp F4  &kp F5  &kp F6 &kp F11 &kp RSHFT
   &kp LS(LBRC) &kp PRCNT         &kp DLLR      &kp RA(LBKT)  &kp RA(RBKT)  &kp CARET     &kp C_VOL_DN &kp F1  &kp F2  &kp F3 &kp F12 &kp RCTRL
                    	                        &kp LGUI      &kp RET       &kp SPACE     &kp RET      &trans  &kp RALT
                        >;
                };

                misc_layer {
// -----------------------------------------------------------------------------------------
// |      |         |        |        |        |       |  |         |          |         |        |       |      |
// |      |         |        |        |        |       |  |         |  BT 4    | BT 5    |        |       |      |
// |      |         |        |        |        |       |  |  BT 0   |  BT 1    | BT 2    | BT 3   |       |      |
//                           |        |        |       |  |         |          |         |
                        bindings = <
   &trans   &trans   &trans    &trans   &trans   &trans   &trans        &trans        &trans        &trans        &trans   &trans
   &trans   &trans   &trans    &trans   &trans   &trans   &bt BT_CLR    &bt BT_SEL 4  &bt BT_SEL 5  &trans        &trans   &trans
   &trans   &trans   &trans    &trans   &trans   &trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans   &trans
                    	       &trans   &trans   &trans   &trans        &trans        &trans
                        >;
                };
        };
};   